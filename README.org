#+TITLE: Servidor para el proyecto de la asignatura de Topicos Selectos de Inteligencia de Negocios


* Prerequisitos

- [[https://clojure.org/][Clojure]] 1.11.2 o superior
- [[https://github.com/technomancy/leiningen][Leiningen]] 2.0.0 o superior.
    
* Ejecución

Para iniciar el servidor, ejectuta:
#+begin_src sh
  lein ring server-headless
#+end_src

* Funcionamiento
- Todo las rutas del servidor reciben y regresan JSON.
- Las imagenes estan guardadas codificadas en [[https://es.wikipedia.org/wiki/Base64][Base64]] modificado para URL, las imagenes seran recibidas y enviadas en este formato.
  - Nota: La implementación de la codificación Base64UrlEncoder en Java no funciona de manera adecuada, utilizar [[https://commons.apache.org/proper/commons-codec/][Apache Codecs]].

* Endpoints
Todas las peticiones esperan entrada JSON y regresan JSON
** /access - GET
*** Salida
Regresa todos los registros de metricas
#+begin_src js
  [
      {
          "humidity": REAL,
          "time": DATETIME
      }
      ...
  ]
#+end_src

** /access/last - GET
*** Salida
Regresa el ultimo registro de metricas
#+begin_src js
  [
    {
        "humidity": REAL,
        "time": DATETIME
    }
  ]
#+end_src

** /access/{year}/{month}/{day} - GET
Ruta dinamica, ejemplos de uso
*** Entrada
Si la ruta, al finalizar con {day}, utilizamos el parametro "is-week" con cualquier valor, pasara a devolver los valores de la semana correspondiente, y no los valores de ese día
#+begin_src 
/metric/2024/2/2 -> Devuelve los valores del día "2024-02-02"

/metric/2024/2/2?is-week=true -> Devuelve los valores la semana segunda semana 2 del "2024-02"
#+end_src
*** Salida
Regresa el ultimo registro de metricas
#+begin_src js
  [
    {
        "humidity": REAL,
        "time": DATETIME
    }
  ]
#+end_src


** /access/insert - POST
*** Entrada
person_type = "niño" o "adulto"
access_type = "entrada" o "salida"

#+begin_example
x-www-form-urlencoded

person_type=STRING&access_type=STRING
#+end_example

*** Salida
Regresa el registro de la metríca enviada
#+begin_src js
    [
      {
        "person_type": STRING,
        "access_type": STRING
        "time": DATETIME
      }
    ]
#+end_src
** /images - GET
*** Salida
Un JSON con la información de todas las imagenes contenidas por el servidor
#+begin_src js
  [
      {
          "type": STRING,
          "URL": STRING,
          "description": STRING?,
          "sent": 0 | 1,
      }
      ...
  ]
#+end_src

** /images/{url} - GET
Muestra la imagen del URL correspondiente.


** /images/last - GET
*** Salida
Un JSON con la información de la ultima imagen contenida por el servidor
#+begin_src js
  [
      {
          "type": STRING,
          "url": BASE64 URL ENCODED STRING,
          "description": STRING?,
          "sent": 0 | 1,
      }
  ]
#+end_src
** /images/some - GET
*** Entrada
Por lo menos uno de los dos atributos a consultar (type y sent)
Es decir, se puede consultar por tipo, o por sent, por ambos a la vez

#+begin_example
x-www-form-urlencoded

type=STRING
sent=STRING
type=STRING&sent=STRING
#+end_example

*** Salida
Un JSON con la información de todas las imagenes contenidas por el servidor que cumplan la consulta.
#+begin_src js
  [
      {
          "type": STRING,
          "url": BASE64 URL ENCODED STRING,
          "description": STRING?,
          "sent": 0 | 1,
      }
  ]
#+end_src

** /images/pending - GET
*** Salida
Un JSON con la información de todas las imagenes pendientes contenidas por el servidor

*NOTA: Esta ruta actualiza el estado de las imagenes de pendientes, a enviadas, por lo que una segunda petición no regresaría nada*
#+begin_src js
  [
      {
          "type": STRING,
          "url": BASE64 URL ENCODED STRING,
          "description": STRING?,
          "sent": 0 | 1,
      }
  ]
#+end_src
** /images/insert - POST
*** Entrada
La información de la imagen a guardar en el servidor
#+begin_example
multipart/form-data

type=STRING&image=FILE&description=STRING
#+end_example

*** Salida
Un JSON con la información de la imagen guardada en el servidor
#+begin_src js
  [
      {
          "type": STRING,
          "url": BASE64 URL ENCODED STRING,
          "description": STRING?,
          "sent": 0 | 1,
      }
  ]
#+end_src

